// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  role      Role     @default(USER)
  isActive  Boolean  @default(true)
  tickets   Ticket[]
  orders    Order[]
  posts     Post[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
  AI_AGENT
}

model Order {
  id          Int         @id @default(autoincrement())
  orderId     String      @unique
  customer    User        @relation(fields: [customerId], references: [id])
  customerId  Int
  items       Json
  total       Float
  status      OrderStatus @default(PENDING)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

enum OrderStatus {
  PENDING
  DELIVERED
  REFUNDED
}

model Post {
  id         Int        @id @default(autoincrement())
  title      String
  slug       String     @unique
  content    String
  excerpt    String?
  status     PostStatus @default(DRAFT)
  author     User       @relation(fields: [authorId], references: [id])
  authorId   Int
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

enum PostStatus {
  DRAFT
  PUBLISHED
  TRASHED
}

model Ticket {
  id          Int             @id @default(autoincrement())
  ticketId    String          @unique
  subject     String
  description String
  customer    User            @relation(fields: [customerId], references: [id])
  customerId  Int
  status      TicketStatus    @default(OPEN)
  priority    TicketPriority  @default(MEDIUM)
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
}

enum TicketStatus {
  OPEN
  CLOSED
}

enum TicketPriority {
  LOW
  MEDIUM
  HIGH
}

model SiteConfig {
  id                Int      @id @default(autoincrement())
  maintenanceMode   Boolean  @default(false)
  lastCacheClear    DateTime?
  siteName          String   @default("SiteMind")
  siteDescription   String   @default("AI-Native E-Commerce Platform")
  contactEmail      String   @default("admin@sitemind.com")
  maxUploadSize     Int      @default(10)
  enableRegistration Boolean @default(true)
  enableComments    Boolean  @default(true)
  aiAgentEnabled    Boolean  @default(true)
  cacheEnabled      Boolean  @default(true)
  cacheTTL          Int      @default(3600)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model AgentLog {
  id          Int        @id @default(autoincrement())
  taskId      String     // e.g., "refund_order_456"
  task        String     // e.g., "Refunded order #456 due to defect"
  status      LogStatus  @default(PENDING)
  timestamp   DateTime   @default(now())
  details     Json?      // array of sub-tasks: { action, status, timestamp }
  parentId    Int?
  children    AgentLog[] @relation("LogHierarchy")
  parent      AgentLog?  @relation("LogHierarchy", fields: [parentId], references: [id])
}

enum LogStatus {
  PENDING
  SUCCESS
  FAILED
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  slug        String   @unique
  description String
  price       Float
  imageUrl    String?
  category    String?
  stock       Int      @default(0)
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}